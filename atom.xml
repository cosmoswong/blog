<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cosmoswong</title>
  
  <subtitle>A journey of a thousand miles begins with a single step.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cosmoswong.github.io/"/>
  <updated>2019-10-19T14:21:43.780Z</updated>
  <id>https://cosmoswong.github.io/</id>
  
  <author>
    <name>cosmoswong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>idea学习简记</title>
    <link href="https://cosmoswong.github.io/2019/10/19/idea%E5%AD%A6%E4%B9%A0%E7%AE%80%E8%AE%B0/"/>
    <id>https://cosmoswong.github.io/2019/10/19/idea学习简记/</id>
    <published>2019-10-19T11:35:13.000Z</published>
    <updated>2019-10-19T14:21:43.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-设置编码"><a href="#1-设置编码" class="headerlink" title="1. 设置编码"></a>1. 设置编码</h1><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485295663.png" alt="1571485295663"></p><p>每当打开一个文件时，底部会显示文件的编码信息，也可以通过这里调节文件的编码：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485361897.png" alt="1571485361897"></p><h1 id="2-快捷键"><a href="#2-快捷键" class="headerlink" title="2. 快捷键"></a>2. 快捷键</h1><h2 id="2-1-导入自定义的Eclipse快捷键："><a href="#2-1-导入自定义的Eclipse快捷键：" class="headerlink" title="2.1 导入自定义的Eclipse快捷键："></a>2.1 导入自定义的Eclipse快捷键：</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485135914.png" alt="1571485135914"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485253806.png" alt="1571485253806"></p><h2 id="2-2-修改快捷键"><a href="#2-2-修改快捷键" class="headerlink" title="2.2 修改快捷键"></a>2.2 修改快捷键</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485428180.png" alt="1571485428180"></p><h2 id="2-3-常用的快捷键"><a href="#2-3-常用的快捷键" class="headerlink" title="2.3 常用的快捷键"></a>2.3 常用的快捷键</h2><h3 id="（1）ctrl-alt-v-：-生成返回值变量"><a href="#（1）ctrl-alt-v-：-生成返回值变量" class="headerlink" title="（1）ctrl+alt+v ： 生成返回值变量"></a>（1）ctrl+alt+v ： 生成返回值变量</h3><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485558963.png" alt="1571485558963"></p><h3 id="（2）Alt-shift-r-：修改所有相关变量的变量名或方法名"><a href="#（2）Alt-shift-r-：修改所有相关变量的变量名或方法名" class="headerlink" title="（2）Alt+shift+r ：修改所有相关变量的变量名或方法名"></a>（2）Alt+shift+r ：修改所有相关变量的变量名或方法名</h3><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485605873.png" alt="1571485605873"></p><h3 id="（3）ctrl-shift-y-：大小写切换"><a href="#（3）ctrl-shift-y-：大小写切换" class="headerlink" title="（3）ctrl+shift+y  ：大小写切换"></a>（3）ctrl+shift+y  ：大小写切换</h3><h3 id="（4）ctrl-shift-x-：打开文件在硬盘中的位置"><a href="#（4）ctrl-shift-x-：打开文件在硬盘中的位置" class="headerlink" title="（4）ctrl+shift+x  ：打开文件在硬盘中的位置"></a>（4）ctrl+shift+x  ：打开文件在硬盘中的位置</h3><h3 id="（5）alt-shift-s-：可以选择生成Set和get、构造方法、覆盖方法等。"><a href="#（5）alt-shift-s-：可以选择生成Set和get、构造方法、覆盖方法等。" class="headerlink" title="（5）alt+shift+s ：可以选择生成Set和get、构造方法、覆盖方法等。"></a>（5）alt+shift+s ：可以选择生成Set和get、构造方法、覆盖方法等。</h3><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485749800.png" alt="1571485749800"></p><h3 id="（6）Ctrl-Shift-F-：全局搜索"><a href="#（6）Ctrl-Shift-F-：全局搜索" class="headerlink" title="（6）Ctrl+Shift+F ：全局搜索"></a>（6）Ctrl+Shift+F ：全局搜索</h3><p>或Edit–&gt;Find–&gt;Find in path打开搜索窗口，如下图</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571488534486.png" alt="1571488534486"></p><h3 id="（7）Ctrl-Shift-R-：全局替换"><a href="#（7）Ctrl-Shift-R-：全局替换" class="headerlink" title="（7）Ctrl+Shift+R ：全局替换"></a>（7）Ctrl+Shift+R ：全局替换</h3><p>或者点击Edit–&gt;Find–&gt;Replace in path打开窗口。比搜索窗口多了填写替换内容的输入框，如下图：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571488628910.png" alt="1571488628910"></p><h3 id="（8）ctrl-L：转到特定行"><a href="#（8）ctrl-L：转到特定行" class="headerlink" title="（8）ctrl+L：转到特定行"></a>（8）ctrl+L：转到特定行</h3><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571488867777.png" alt="1571488867777"></p><h1 id="3-外观设置"><a href="#3-外观设置" class="headerlink" title="3. 外观设置"></a>3. 外观设置</h1><h2 id="3-1-字体大小设置"><a href="#3-1-字体大小设置" class="headerlink" title="3.1 字体大小设置"></a>3.1 字体大小设置</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485830803.png" alt="1571485830803"></p><h1 id="4-maven设置"><a href="#4-maven设置" class="headerlink" title="4. maven设置"></a>4. maven设置</h1><h2 id="4-1-设置Maven下载jar包时，不要自动下载源码和文档，需要时手动下载"><a href="#4-1-设置Maven下载jar包时，不要自动下载源码和文档，需要时手动下载" class="headerlink" title="4.1 设置Maven下载jar包时，不要自动下载源码和文档，需要时手动下载"></a>4.1 设置Maven下载jar包时，不要自动下载源码和文档，需要时手动下载</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571485901485.png" alt="1571485901485"></p><h2 id="4-2-配置Maven自动导包"><a href="#4-2-配置Maven自动导包" class="headerlink" title="4.2 配置Maven自动导包"></a>4.2 配置Maven自动导包</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571486185811.png" alt="1571486185811"></p><h2 id="4-3-关于Jar包下载问题"><a href="#4-3-关于Jar包下载问题" class="headerlink" title="4.3  关于Jar包下载问题"></a>4.3  关于Jar包下载问题</h2><p>​     在下载一些Jar包的时候，一直下载不下来，检查是否是jar包的版本存在问题，如下面的这个jar包，平时在配置pom文件的时候，都会忽略这个配置，当打开它的jar包所在maven库发现，Jar包都是有版本的，此时就需要加上版本限制。</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571489139149.png" alt="1571489139149"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571489117794.png" alt="1571489117794"></p><h2 id="4-4-图形化显示jar包之间的以来关系"><a href="#4-4-图形化显示jar包之间的以来关系" class="headerlink" title="4.4  图形化显示jar包之间的以来关系"></a>4.4  图形化显示jar包之间的以来关系</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571489507698.png" alt="1571489507698"></p><p>​    并且，如果不想要某些Jar包，可以设置排除它，效果等同于exclude。</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571489589104.png" alt="1571489589104"></p><p>通过如如上的操作后，在pom文件中的显示效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;exclusions&gt;</span><br><span class="line">    &lt;exclusion&gt;</span><br><span class="line">      &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span><br><span class="line">      &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span><br><span class="line">    &lt;/exclusion&gt;</span><br><span class="line">    &lt;exclusion&gt;</span><br><span class="line">      &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;</span><br><span class="line">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line"> &lt;/exclusion&gt;</span><br></pre></td></tr></table></figure><h2 id="4-5-添加的maven模块，根目录和资源目录没有被识别"><a href="#4-5-添加的maven模块，根目录和资源目录没有被识别" class="headerlink" title="4.5 添加的maven模块，根目录和资源目录没有被识别"></a>4.5 添加的maven模块，根目录和资源目录没有被识别</h2><p>可以通过如下的方式标记根目录和资源目录：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490430239.png" alt="1571490430239"></p><p>也可以通过点击按钮刷新maven，使得能够被识别：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490552393.png" alt="1571490552393"></p><h1 id="5-Tomcat-设置"><a href="#5-Tomcat-设置" class="headerlink" title="5. Tomcat 设置"></a>5. Tomcat 设置</h1><h2 id="5-1-为web项目添加tomcat模块"><a href="#5-1-为web项目添加tomcat模块" class="headerlink" title="5.1 为web项目添加tomcat模块"></a>5.1 为web项目添加tomcat模块</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490091393.png" alt="1571490091393"></p><p>  选择要部署的项目：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490164589.png" alt="1571490164589"></p><p>启动tomcat即可：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490215177.png" alt="1571490215177"></p><h2 id="5-2-为普通maven项目添加web配置"><a href="#5-2-为普通maven项目添加web配置" class="headerlink" title="5.2 为普通maven项目添加web配置"></a>5.2 为普通maven项目添加web配置</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571489928286.png" alt="1571489928286"></p><p>双击创建：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571489973496.png" alt="1571489973496"></p><p>另外还需要生成对应的web.xml文件：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490008650.png" alt="1571490008650"></p><p>选择web.xml文件的保存位置：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490029851.png" alt="1571490029851"></p><h1 id="5-其他设置"><a href="#5-其他设置" class="headerlink" title="5. 其他设置"></a>5. 其他设置</h1><h2 id="5-1-显示文档的Structure，类似于Eclipse中的outlook窗口"><a href="#5-1-显示文档的Structure，类似于Eclipse中的outlook窗口" class="headerlink" title="5.1 显示文档的Structure，类似于Eclipse中的outlook窗口"></a>5.1 显示文档的Structure，类似于Eclipse中的outlook窗口</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571486111668.png" alt="1571486111668"></p><h2 id="5-2-忽略文件"><a href="#5-2-忽略文件" class="headerlink" title="5.2 忽略文件"></a>5.2 忽略文件</h2><p>想要在不显示某些文件或提交文件时，限制不提交.class等文件，就可以通过这种方式来设置。下面是我的个人设置：</p><p>如：<em>.classpath;</em>.gitignore;<em>.hprof;</em>.iml;<em>.project;</em>.pyc;<em>.pyo;</em>.rbc;<em>.settings;</em>.yarb;*~;.DS_Store;.git;.hg;.idea;.mvn;.svn;CVS;<strong>pycache</strong>;_svn;vssver.scc;vssver2.scc;</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571488100496.png" alt="1571488100496"></p><p>参考链接：<a href="https://www.cnblogs.com/xiohao/p/9709562.html" target="_blank" rel="noopener"><a href="https://www.cnblogs.com/xiohao/p/9709562.html" target="_blank" rel="noopener">IDEA忽略某些文件</a></a></p><h2 id="5-3-代码抽取"><a href="#5-3-代码抽取" class="headerlink" title="5.3 代码抽取"></a>5.3 代码抽取</h2><p>选择要抽取的代码：refactor—&gt;extract—-&gt;method</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490625699.png" alt="1571490625699"></p><h2 id="5-3-关于调试"><a href="#5-3-关于调试" class="headerlink" title="5.3 关于调试"></a>5.3 关于调试</h2><p>IDEA中的代码调试和Eclipse中长的很不一样，但是使用方法上都是相同的：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490711567.png" alt="1571490711567"></p><h2 id="5-4-关于JDK的配置"><a href="#5-4-关于JDK的配置" class="headerlink" title="5.4 关于JDK的配置"></a>5.4 关于JDK的配置</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490908892.png" alt="1571490908892"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490920186.png" alt="1571490920186"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490935020.png" alt="1571490935020">)<img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571490942229.png" alt="1571490942229"></p><blockquote><p>参考链接：<a href="https://blog.csdn.net/fanrenxiang/article/details/80676262" target="_blank" rel="noopener">idea JDK设置</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-设置编码&quot;&gt;&lt;a href=&quot;#1-设置编码&quot; class=&quot;headerlink&quot; title=&quot;1. 设置编码&quot;&gt;&lt;/a&gt;1. 设置编码&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cosmoswong-img-1258890093.cos.ap-s
      
    
    </summary>
    
    
    
      <category term="idea" scheme="https://cosmoswong.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习简记</title>
    <link href="https://cosmoswong.github.io/2019/10/16/Linux%E5%AD%A6%E4%B9%A0%E7%AE%80%E8%AE%B0/"/>
    <id>https://cosmoswong.github.io/2019/10/16/Linux学习简记/</id>
    <published>2019-10-16T07:44:12.000Z</published>
    <updated>2019-10-19T11:04:06.170Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h1><h1 id="2-关于Date"><a href="#2-关于Date" class="headerlink" title="2. 关于Date"></a>2. 关于Date</h1><h2 id="2-1-Date-命令"><a href="#2-1-Date-命令" class="headerlink" title="2.1 Date 命令"></a>2.1 Date 命令</h2><p>（1）明天</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop-102 hive]$ date -d "1 day" +%Y%m%d      </span><br><span class="line">20191020</span><br></pre></td></tr></table></figure><p>（2）昨天</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop-102 hive]$ date -d "-1 day" +%Y%m%d</span><br><span class="line">20191018</span><br></pre></td></tr></table></figure><p>（3）上一个月</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop-102 hive]$ date -d "-1 month" +%Y%m%d</span><br><span class="line">20190919</span><br></pre></td></tr></table></figure><p>（4）前三分钟</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop-102 hive]$  date -d "-3 minute" +%Y%m-%d-%H%M</span><br><span class="line">201910-19-1802</span><br></pre></td></tr></table></figure><p>（5）用“-”分割，截取出第一个参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop-102 hive]$ date -d "-3 minute" +%Y%m-%d-%H%M | awk -F '-' '&#123;print $1&#125;'</span><br><span class="line">201910</span><br></pre></td></tr></table></figure><p>（6）用“-”分割，截取出第二个参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop-102 hive]$  date -d "-3 minute" +%Y%m-%d-%H%M | awk -F '-' '&#123;print $2&#125;'</span><br><span class="line">19</span><br></pre></td></tr></table></figure><p>（7）用“-”分割，截取出第三个参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop-102 hive]$ date -d "-3 minute" +%Y%m-%d-%H%M | awk -F '-' '&#123;print $3&#125;'</span><br><span class="line">1804</span><br></pre></td></tr></table></figure><h1 id="3-关于crontab"><a href="#3-关于crontab" class="headerlink" title="3. 关于crontab"></a>3. 关于crontab</h1><ol><li>crontab常用命令</li></ol><p>​    （1）查看状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service crond status</span><br></pre></td></tr></table></figure><p>​    （2）停止状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service crond stop</span><br></pre></td></tr></table></figure><p>​    （3）启动状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service crond start</span><br></pre></td></tr></table></figure><p>​    （4）编辑crontab定时任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>​    （5）查询crontab任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure><p>（6）删除当前用户所有的crontab任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -r</span><br></pre></td></tr></table></figure><ol start="2"><li>编写crontab调度</li></ol><p>​    1）进入编写crontab调度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop103 shell]$ crontab -e</span><br></pre></td></tr></table></figure><p>​    2）实现每分钟执行一次</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * source /etc/profile; /opt/module/shell/hdfstohive.sh</span><br></pre></td></tr></table></figure><table><thead><tr><th>项目</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td>第一个“*”</td><td>一小时当中的第几分钟</td><td>0-59</td></tr><tr><td>第二个“*”</td><td>一天当中的第几小时</td><td>0-23</td></tr><tr><td>第三个“*”</td><td>一个月当中的第几天</td><td>1-31</td></tr><tr><td>第四个“*”</td><td>一年当中的第几月</td><td>1-12</td></tr><tr><td>第五个“*”</td><td>一周当中的星期几</td><td>0-7（0和7都代表星期日）</td></tr></tbody></table><p>​    3）查看crontab</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop103 shell]$ crontab -l</span><br><span class="line">* * * * * source /etc/profile; /opt/module/shell/hdfstohive.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1.&quot;&gt;&lt;/a&gt;1.&lt;/h1&gt;&lt;h1 id=&quot;2-关于Date&quot;&gt;&lt;a href=&quot;#2-关于Date&quot; class=&quot;headerlink&quot; title=&quot;2. 关于Date&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="Hadoop" scheme="https://cosmoswong.github.io/tags/Hadoop/"/>
    
      <category term="Linux" scheme="https://cosmoswong.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>docker学习简记</title>
    <link href="https://cosmoswong.github.io/2019/10/16/docker%E5%AD%A6%E4%B9%A0%E7%AE%80%E8%AE%B0/"/>
    <id>https://cosmoswong.github.io/2019/10/16/docker学习简记/</id>
    <published>2019-10-16T07:10:39.000Z</published>
    <updated>2019-10-19T14:34:01.074Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker简记"><a href="#Docker简记" class="headerlink" title="Docker简记"></a>Docker简记</h1><h2 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h2><p><strong>Docker</strong>是一个开源的应用容器引擎；是一个轻量级容器技术；</p><p>Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜像发布出去，其他使用者可以直接使用这个镜像；</p><p>运行中的这个镜像称为容器，容器启动是非常快速的。</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571210424122.png" alt="1571210424122"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571210454058.png" alt="1571210454058"></p><h2 id="2、核心概念"><a href="#2、核心概念" class="headerlink" title="2、核心概念"></a>2、核心概念</h2><p>docker主机(Host)：安装了Docker程序的机器（Docker直接安装在操作系统之上）；</p><p>docker客户端(Client)：连接docker主机进行操作；</p><p>docker仓库(Registry)：用来保存各种打包好的软件镜像；</p><p>docker镜像(Images)：软件打包好的镜像；放在docker仓库中；</p><p>docker容器(Container)：镜像启动后的实例称为一个容器；容器是独立运行的一个或一组应用</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571210472471.png" alt="1571210472471"></p><p>使用Docker的步骤：</p><p>1）、安装Docker</p><p>2）、去Docker仓库找到这个软件对应的镜像；</p><p>3）、使用Docker运行这个镜像，这个镜像就会生成一个Docker容器；</p><p>4）、对容器的启动停止就是对软件的启动停止；</p><h2 id="3、安装Docker"><a href="#3、安装Docker" class="headerlink" title="3、安装Docker"></a>3、安装Docker</h2><h4 id="在linux虚拟机上安装docker"><a href="#在linux虚拟机上安装docker" class="headerlink" title="在linux虚拟机上安装docker"></a>在linux虚拟机上安装docker</h4><p>步骤：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、检查内核版本，必须是3.10及以上</span><br><span class="line">uname -r</span><br><span class="line">2、安装docker</span><br><span class="line">yum -y install docker</span><br><span class="line">3、输入y确认安装</span><br><span class="line">4、启动docker</span><br><span class="line">[root@localhost ~]# systemctl start docker</span><br><span class="line">[root@localhost ~]# docker -v</span><br><span class="line">Docker version 1.12.6, build 3e8e77d/1.12.6</span><br><span class="line">5、开机启动docker</span><br><span class="line">[root@localhost ~]# systemctl enable docker</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br><span class="line">6、停止docker</span><br><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure><h2 id="4、Docker常用命令-amp-操作"><a href="#4、Docker常用命令-amp-操作" class="headerlink" title="4、Docker常用命令&amp;操作"></a>4、Docker常用命令&amp;操作</h2><h3 id="1）、镜像操作"><a href="#1）、镜像操作" class="headerlink" title="1）、镜像操作"></a>1）、镜像操作</h3><table><thead><tr><th>操作</th><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>检索</td><td>docker  search 关键字  eg：docker  search redis</td><td>我们经常去docker  hub上检索镜像的详细信息，如镜像的TAG。</td></tr><tr><td>拉取</td><td>docker pull 镜像名:tag</td><td>:tag是可选的，tag表示标签，多为软件的版本，默认是latest</td></tr><tr><td>列表</td><td>docker images</td><td>查看所有本地镜像</td></tr><tr><td>删除</td><td>docker rmi image-id</td><td>删除指定的本地镜像</td></tr></tbody></table><p><a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a></p><h3 id="2）、容器操作"><a href="#2）、容器操作" class="headerlink" title="2）、容器操作"></a>2）、容器操作</h3><p>软件镜像（QQ安装程序）—-运行镜像—-产生一个容器（正在运行的软件，运行的QQ）；</p><p>步骤：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1、搜索镜像</span><br><span class="line">[root@localhost ~]# docker search tomcat</span><br><span class="line">2、拉取镜像</span><br><span class="line">[root@localhost ~]# docker pull tomcat</span><br><span class="line">3、根据镜像启动容器</span><br><span class="line">docker run --name mytomcat -d tomcat:latest</span><br><span class="line">4、docker ps  </span><br><span class="line">查看运行中的容器</span><br><span class="line">5、 停止运行中的容器</span><br><span class="line">docker stop  容器的id</span><br><span class="line">6、查看所有的容器</span><br><span class="line">docker ps -a</span><br><span class="line">7、启动容器</span><br><span class="line">docker start 容器id</span><br><span class="line">8、删除一个容器</span><br><span class="line"> docker rm 容器id</span><br><span class="line">9、启动一个做了端口映射的tomcat</span><br><span class="line">[root@localhost ~]# docker run -d -p 8888:8080 tomcat</span><br><span class="line">-d：后台运行</span><br><span class="line">-p: 将主机的端口映射到容器的一个端口    主机端口:容器内部的端口</span><br><span class="line"></span><br><span class="line">10、为了演示简单关闭了linux的防火墙</span><br><span class="line">service firewalld status ；查看防火墙状态</span><br><span class="line">service firewalld stop：关闭防火墙</span><br><span class="line">11、查看容器的日志</span><br><span class="line">docker logs container-name/container-id</span><br><span class="line"></span><br><span class="line">更多命令参看</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/docker/</span><br><span class="line">可以参考每一个镜像的文档</span><br></pre></td></tr></table></figure><h3 id="3）、安装MySQL示例"><a href="#3）、安装MySQL示例" class="headerlink" title="3）、安装MySQL示例"></a>3）、安装MySQL示例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br></pre></td></tr></table></figure><p>错误的启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# docker run --name mysql01 -d mysql</span><br><span class="line">42f09819908bb72dd99ae19e792e0a5d03c48638421fa64cce5f8ba0f40f5846</span><br><span class="line"></span><br><span class="line">mysql退出了</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                           PORTS               NAMES</span><br><span class="line">42f09819908b        mysql               "docker-entrypoint.sh"   34 seconds ago      Exited (1) 33 seconds ago                            mysql01</span><br><span class="line">538bde63e500        tomcat              "catalina.sh run"        About an hour ago   Exited (143) About an hour ago                       compassionate_</span><br><span class="line">goldstine</span><br><span class="line">c4f1ac60b3fc        tomcat              "catalina.sh run"        About an hour ago   Exited (143) About an hour ago                       lonely_fermi</span><br><span class="line">81ec743a5271        tomcat              "catalina.sh run"        About an hour ago   Exited (143) About an hour ago                       sick_ramanujan</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//错误日志</span><br><span class="line">[root@localhost ~]# docker logs 42f09819908b</span><br><span class="line">error: database is uninitialized and password option is not specified </span><br><span class="line">  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD；这个三个参数必须指定一个</span><br></pre></td></tr></table></figure><p>正确的启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# docker run --name mysql01 -e MYSQL_ROOT_PASSWORD=123456 -d mysql</span><br><span class="line">b874c56bec49fb43024b3805ab51e9097da779f2f572c22c695305dedd684c5f</span><br><span class="line">[root@localhost ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">b874c56bec49        mysql               "docker-entrypoint.sh"   4 seconds ago       Up 3 seconds        3306/tcp            mysql01</span><br></pre></td></tr></table></figure><p>做了端口映射</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# docker run -p 3306:3306 --name mysql02 -e MYSQL_ROOT_PASSWORD=123456 -d mysql</span><br><span class="line">ad10e4bc5c6a0f61cbad43898de71d366117d120e39db651844c0e73863b9434</span><br><span class="line">[root@localhost ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">ad10e4bc5c6a        mysql               "docker-entrypoint.sh"   4 seconds ago       Up 2 seconds        0.0.0.0:3306-&gt;3306/tcp   mysql02</span><br></pre></td></tr></table></figure><p>几个其他的高级操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql03 -v /conf/mysql:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag</span><br><span class="line">把主机的/conf/mysql文件夹挂载到 mysqldocker容器的/etc/mysql/conf.d文件夹里面</span><br><span class="line">改mysql的配置文件就只需要把mysql配置文件放在自定义的文件夹下（/conf/mysql）</span><br><span class="line"></span><br><span class="line">docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci</span><br><span class="line">指定mysql的一些配置参数</span><br></pre></td></tr></table></figure><p>在外部使用navicat连接到容器内的MySQL的时候，出现了如下的问题：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571218278801.png" alt="1571218278801"></p><p>Client does not suport authentication……</p><p>问题参考链接：[<a href="https://www.cnblogs.com/ph7seven/p/9261433.html" target="_blank" rel="noopener">docker mysql authentication_string client does not support authentication 连接问题 </a></p><p>解决方法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux4 ~]# docker ps </span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                               NAMES</span><br><span class="line">66a2a9482b3d        mysql               "docker-entrypoint..."   6 minutes ago       Up 6 minutes        0.0.0.0:3306-&gt;3306/tcp, 33060/tcp   mysql01</span><br><span class="line">[root@Linux4 ~]# docker exec -it 66a2a9482b3d /bin/bash</span><br><span class="line">root@66a2a9482b3d:/# mysql -uroot -pAdmin@23</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 13</span><br><span class="line">Server version: 8.0.18 MySQL Community Server - GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span>use mysql;</span><br><span class="line"><span class="meta">mysql&gt;</span> show tables;</span><br><span class="line"><span class="meta">mysql&gt;</span> select host,user,authentication_string from user ; </span><br><span class="line">+-----------+---------------+-------------------------------------------+</span><br><span class="line">| host      | user          | authentication_string                     |</span><br><span class="line">+-----------+---------------+-------------------------------------------+</span><br><span class="line">| localhost | root          | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |</span><br><span class="line">| localhost | mysql.session | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE |</span><br><span class="line">| localhost | mysql.sys     | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE |</span><br><span class="line">| %         | root          | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |</span><br><span class="line">+-----------+---------------+-------------------------------------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">#</span># 执行下面的三条SQL语句</span><br><span class="line"><span class="meta">mysql&gt;</span> alter user 'root'@'localhost' identified with mysql_native_password by 'Admin@23';</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span>update user set authentication_string = 'root' where user = 'root' and host = 'localhost';</span><br><span class="line"><span class="meta">mysql&gt;</span>update user set authentication_string = 'root' where user = 'root' and host = '%';</span><br><span class="line"><span class="meta">mysql&gt;</span>flush privileges;</span><br></pre></td></tr></table></figure><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571220062790.png" alt="1571220062790"></p><p>is not allowed to connecte to this Mysql server，在前面的操作后要重启一下mysql容器。</p><p>再次连接测试：</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571222067072.png" alt="1571222067072"></p><h2 id="5、拷贝镜像到另外一台设备"><a href="#5、拷贝镜像到另外一台设备" class="headerlink" title="5、拷贝镜像到另外一台设备"></a>5、拷贝镜像到另外一台设备</h2><h3 id="1-、导出镜像到文件"><a href="#1-、导出镜像到文件" class="headerlink" title="1)、导出镜像到文件"></a>1)、导出镜像到文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux4 software]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">docker.io/mysql     5.7                 f6a0f3bb2722        13 hours ago        437 MB</span><br><span class="line">docker.io/mysql     latest              b6487d0ec59e        13 hours ago        456 MB</span><br><span class="line"><span class="meta">#</span>保存镜像的方式有两种：</span><br><span class="line"><span class="meta">   #</span> docker save -o 文件 镜像名</span><br><span class="line"><span class="meta">   #</span> docker save 镜像名 &gt; 文件</span><br><span class="line">[root@Linux4 software]# docker save -o mysql5.7.tar docker.io/mysql</span><br></pre></td></tr></table></figure><h3 id="2-、拷贝镜像到另外一台设备"><a href="#2-、拷贝镜像到另外一台设备" class="headerlink" title="2)、拷贝镜像到另外一台设备"></a>2)、拷贝镜像到另外一台设备</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>将生成的文件拷贝到另外一台设备上：             </span><br><span class="line">[root@Linux4 software]# scp mysql5.7.tar root@192.168.137.25:/opt/software</span><br><span class="line">[root@Linux4 software]#</span><br></pre></td></tr></table></figure><h3 id="3-、在另外一台设备上加载镜像"><a href="#3-、在另外一台设备上加载镜像" class="headerlink" title="3)、在另外一台设备上加载镜像"></a>3)、在另外一台设备上加载镜像</h3><p>加载镜像：加载方式有两种，docker load –input 文件   docker load &lt;  文件名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux5 software]#  docker load --input mysql5.7.tar</span><br></pre></td></tr></table></figure><h3 id="4-、在另外一台设备上运行镜像"><a href="#4-、在另外一台设备上运行镜像" class="headerlink" title="4)、在另外一台设备上运行镜像"></a>4)、在另外一台设备上运行镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@Linux5 software]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">docker.io/mysql     5.7                 f6a0f3bb2722        14 hours ago        437 MB</span><br><span class="line"><span class="meta">#</span>运行镜像</span><br><span class="line">[root@Linux5 software]# docker run -p 3306:3306 --name mysql02 -e MYSQL_ROOT_PASSWORD=123456 -d f6a0f3bb2722</span><br><span class="line"><span class="meta">#</span>查看镜像的运行状态</span><br><span class="line">[root@Linux5 software]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                               NAMES</span><br><span class="line">5214efd157dc        f6a0f3bb2722        "docker-entrypoint..."   10 seconds ago      Up 9 seconds        0.0.0.0:3306-&gt;3306/tcp, 33060/tcp   mysql02</span><br><span class="line"><span class="meta">#</span>执行</span><br><span class="line">[root@Linux5 software]# docker exec -it 5214efd157dc /bin/bash</span><br></pre></td></tr></table></figure><h2 id="6、Docker基本概念"><a href="#6、Docker基本概念" class="headerlink" title="6、Docker基本概念"></a>6、Docker基本概念</h2><h3 id><a href="#" class="headerlink" title></a></h3><h2 id="7、制作自己的docker镜像"><a href="#7、制作自己的docker镜像" class="headerlink" title="7、制作自己的docker镜像"></a>7、制作自己的docker镜像</h2><h3 id="1-、阿里云docker管理平台创建仓库"><a href="#1-、阿里云docker管理平台创建仓库" class="headerlink" title="1)、阿里云docker管理平台创建仓库"></a>1)、阿里云docker管理平台创建仓库</h3><p>进入<a href="https://cr.console.aliyun.com/?spm=5176.166170.863063.btn1cr3.5bb8217f9bKZ7S#/imageList" target="_blank" rel="noopener">阿里云镜像服务控制台</a>，新建镜像仓库，如图</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571238872879.png" alt="1571238872879"></p><p>更多使用方法见：<a href="https://blog.csdn.net/weixin_40475396/article/details/80423980" target="_blank" rel="noopener">制作自己的Docker镜像</a></p><h3 id="2）、使用镜像加速服务"><a href="#2）、使用镜像加速服务" class="headerlink" title="2）、使用镜像加速服务"></a>2）、使用镜像加速服务</h3><p>鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，我们可以需要配置加速器来解决。</p><ul><li>打开镜像加速器，查看自己的专属加速器地址，然后点击Centos（笔者使用的centos，其他系统自选）选项卡，将黑色部分复制并执行即可</li></ul><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571238673703.png" alt="1571238673703"></p><p>我使用的是阿里云的本人自己账号的镜像地址(需要自己注册有一个属于你自己的)：   <a href="https://xxxx.mirror.aliyuncs.com" target="_blank" rel="noopener">https://xxxx.mirror.aliyuncs.com</a></p><ul><li>vim /etc/sysconfig/docker  将获得的自己账户下的阿里云加速地址配置进<br>other_args=”–registry-mirror=https://你自己的账号加速信息.mirror.aliyuncs.com”</li></ul><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571238742406.png" alt="1571238742406"></p><ul><li>重新启动Docker后台服务：service docker restart</li></ul><h3 id="3）、推送镜像到阿里云上"><a href="#3）、推送镜像到阿里云上" class="headerlink" title="3）、推送镜像到阿里云上"></a>3）、推送镜像到阿里云上</h3><p>手动构建Docker镜像</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571242953487.png" alt="1571242953487"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux4 ~]# docker commit -a 个人阿里云名 -m "initial centos" 6513375d8301 mycentos:1.8</span><br><span class="line"></span><br><span class="line">[root@Linux4 ~]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mycentos            1.8                 97f81563fe45        34 seconds ago      220 MB</span><br><span class="line">docker.io/centos    latest              0f3e07c0138f        2 weeks ago         220 MB</span><br></pre></td></tr></table></figure><p>![1571243068904](<a href="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571243068904.png" target="_blank" rel="noopener">https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571243068904.png</a></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571243243055.png" alt="1571243243055"></p><p>更多使用方法见博客：<a href="https://blog.csdn.net/weixin_40475396/article/details/80423980" target="_blank" rel="noopener">https://blog.csdn.net/weixin_40475396/article/details/80423980</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Docker简记&quot;&gt;&lt;a href=&quot;#Docker简记&quot; class=&quot;headerlink&quot; title=&quot;Docker简记&quot;&gt;&lt;/a&gt;Docker简记&lt;/h1&gt;&lt;h2 id=&quot;1、简介&quot;&gt;&lt;a href=&quot;#1、简介&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
      <category term="docker" scheme="https://cosmoswong.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>提高工作效率的桌面工具推荐</title>
    <link href="https://cosmoswong.github.io/2019/10/16/%E6%8F%90%E9%AB%98%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E7%9A%84%E6%A1%8C%E9%9D%A2%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    <id>https://cosmoswong.github.io/2019/10/16/提高工作效率的桌面工具推荐/</id>
    <published>2019-10-16T06:20:57.000Z</published>
    <updated>2019-10-16T06:50:18.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中"><a href="#1-clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中" class="headerlink" title="1.clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中"></a>1.clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中</h1><p>   不过美中不足的是clover的广告实在是太多了，忍受不了的话，可以使用Q-Dir来替代。</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571207314818.png" alt="1571207314818"></p><h1 id="2-Everything-搜索利器"><a href="#2-Everything-搜索利器" class="headerlink" title="2. Everything-搜索利器"></a>2. Everything-搜索利器</h1><p>通过这款工具，妈妈再也不用担心我找不到自己的文件了。</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571207403705.png" alt="1571207403705"></p><p>支持多种搜索方式，后缀名、前缀名、图片、视频等。</p><p>未完待续……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中&quot;&gt;&lt;a href=&quot;#1-clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中&quot; class=&quot;headerlink&quot; title=&quot;1.clover工具，能够管理多个窗口，使得它们
      
    
    </summary>
    
    
    
      <category term="桌面管理" scheme="https://cosmoswong.github.io/tags/%E6%A1%8C%E9%9D%A2%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>基于docker的hadoop集群搭建</title>
    <link href="https://cosmoswong.github.io/2019/10/16/%E5%9F%BA%E4%BA%8Edocker%E7%9A%84hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>https://cosmoswong.github.io/2019/10/16/基于docker的hadoop集群搭建/</id>
    <published>2019-10-16T06:20:10.000Z</published>
    <updated>2019-10-18T11:39:37.704Z</updated>
    
    <content type="html"><![CDATA[<p>序：在以往操作中，需要在每台设备上搭建Hadoop、Hive和hbase环境，不仅操作麻烦而且繁琐。而在docker中一台设备上就可以完成，而且操作方便。</p><h1 id="Dcoker中完全分布式集群的搭建"><a href="#Dcoker中完全分布式集群的搭建" class="headerlink" title="Dcoker中完全分布式集群的搭建"></a>Dcoker中完全分布式集群的搭建</h1><p>   这里所有操作都是在虚拟机192.168.137.25上完成，已经事先完成安装docker。如果没有安装docker请先<a href="https://blog.csdn.net/u013140345/article/details/79771208" target="_blank" rel="noopener">安装docker</a>.</p><h2 id="1、基础工作"><a href="#1、基础工作" class="headerlink" title="1、基础工作"></a>1、基础工作</h2><h3 id="1-1）、-下载centos"><a href="#1-1）、-下载centos" class="headerlink" title="1.1）、 下载centos"></a>1.1）、 下载centos</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@Linux4 ~]# docker pull  centos     </span><br><span class="line">Using default tag: latest</span><br><span class="line">Trying to pull repository docker.io/library/centos ... </span><br><span class="line">latest: Pulling from docker.io/library/centos</span><br></pre></td></tr></table></figure><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571234684095.png" alt="1571234684095"></p><p>只是这个centos实在是太简陋了，需要安装的软件有：ssh、which</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install passwd openssl openssh-server </span><br><span class="line">yum -y install which</span><br></pre></td></tr></table></figure><h3 id="1-2）、安装和配置ssh"><a href="#1-2）、安装和配置ssh" class="headerlink" title="1.2）、安装和配置ssh:"></a>1.2）、安装和配置ssh:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@master module]# yum -y install passwd openssl openssh-server  openssh-clients</span><br><span class="line">[root@master module]# mkdir  /var/run/sshd/</span><br><span class="line">[root@master module]# vi /etc/ssh/sshd_config </span><br><span class="line">注释改行</span><br><span class="line"><span class="meta">#</span><span class="bash">UsePAM yes</span></span><br><span class="line">也可以使用下面的方式来操作</span><br><span class="line">[root@master module]# sed -i "s/UsePAM.*/UsePAM no/g" /etc/ssh/sshd_config</span><br><span class="line">UsePAM no</span><br><span class="line">[root@master module]# /usr/sbin/sshd -D &amp;</span><br><span class="line"> [root@master module]# ps -ef | grep sshd</span><br><span class="line"> root       259     1  0 02:44 ?        00:00:00 /usr/sbin/sshd -D</span><br><span class="line"> root       261     1  0 02:45 ?        00:00:00 grep --color=auto sshd</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/u013140345/article/details/79777311" target="_blank" rel="noopener">https://blog.csdn.net/u013140345/article/details/79777311</a></p><p>（centos7）创建支持ssh服务的docker镜像</p><h3 id="1-3）、配置SSH免密登录"><a href="#1-3）、配置SSH免密登录" class="headerlink" title="1.3）、配置SSH免密登录"></a>1.3）、配置SSH免密登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master module]# ssh-keygen -t rsa</span><br><span class="line">[root@master module]# cd ~/.ssh</span><br><span class="line">[root@master module]# cat id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure><h2 id="2、安装和部署Hadoop集群"><a href="#2、安装和部署Hadoop集群" class="headerlink" title="2、安装和部署Hadoop集群"></a>2、安装和部署Hadoop集群</h2><p>集群的部署信息：</p><table><thead><tr><th align="center">设备列表</th><th align="center">HDFS</th><th align="center">排行1</th></tr></thead><tbody><tr><td align="center">172.0.0.2</td><td align="center">NameNode/DataNode</td><td align="center">ResouceManager/NodeManager</td></tr><tr><td align="center">172.0.0.3</td><td align="center">DataNode</td><td align="center">NodeManager</td></tr><tr><td align="center">172.0.0.4</td><td align="center">SecondNameNode/DataNode</td><td align="center">NodeManager</td></tr></tbody></table><h3 id="2-1）、运行镜像"><a href="#2-1）、运行镜像" class="headerlink" title="2.1）、运行镜像"></a>2.1）、运行镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux5 ~]# docker run -it --rm  -v /opt/software:/opt/software -h master  --name master centos-hadoop  /bin/bash</span><br></pre></td></tr></table></figure><p>关于参数的解释：</p><ul><li><p>-v：表示创建数据卷，用于容器和宿主机之间的数据共享。 冒号前是/opt/software是宿主机目录，冒号后是容器内的目录。</p></li><li><p>-h：设置主机名为master</p></li></ul><p>启动后进入到容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@master /]# cd /opt</span><br><span class="line">[root@master opt]# mkdir module</span><br><span class="line">[root@master opt]# ls -l</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x. 2 root root   6 Oct 18 02:27 module</span><br><span class="line">drwxrwxrwx. 2 root root 195 Oct 16 11:19 software</span><br><span class="line">[root@master opt]# cd software/</span><br><span class="line">[root@master software]# ls -l</span><br><span class="line">total 1755528</span><br><span class="line">-rwxrwxrwx. 1 root root 197657687 May 22  2017 hadoop-2.7.2.tar.gz</span><br><span class="line">-rwxrwxrwx. 1 root root 185515842 Aug 19  2017 jdk-8u144-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压安装hadoop和JAVA</span></span><br><span class="line">[root@master software]# tar -zxvf hadoop-2.7.2.tar.gz -C /opt/module  </span><br><span class="line">[root@master software]# tar -zxvf jdk-8u144-linux-x64.tar.gz -C /opt/module </span><br><span class="line">[root@master software]# cd /opt/module/</span><br><span class="line">[root@master module]# ls</span><br><span class="line">hadoop-2.7.2  jdk1.8.0_144</span><br><span class="line">[root@master module]# mv hadoop-2.7.2 hadoop       </span><br><span class="line">[root@master module]# mv jdk1.8.0_144 jdk1.8 </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置环境变量</span></span><br><span class="line">[root@master module]# vi /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="bash">JAVA_HOME</span></span><br><span class="line">export JAVA_HOME=/opt/module/jdk1.8.</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#HADOOP_HOME</span></span></span><br><span class="line">export HADOOP_HOME=/opt/module/hadoop</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看配置信息</span></span><br><span class="line">[root@master module]# source /etc/profile</span><br><span class="line">[root@master module]# echo $JAVA_HOME</span><br><span class="line">/opt/module/jdk1.8</span><br><span class="line">[root@master module]# echo $HADOOP_HOME</span><br><span class="line">/opt/module/hadoop</span><br><span class="line">[root@master module]# java -version</span><br><span class="line">java version "1.8.0_144"</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_144-b01)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="2-2）、修改配置文件"><a href="#2-2）、修改配置文件" class="headerlink" title="2.2）、修改配置文件"></a>2.2）、修改配置文件</h3><ol><li>core-site.xml文件：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hdfs://master:9000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/opt/module/hadoop/data/tmp&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>hadoop-env.sh：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/module/jdk1.8</span><br></pre></td></tr></table></figure><ol start="3"><li>hdfs-site.xml：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">   &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">   &lt;value&gt;3&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">   &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span><br><span class="line">   &lt;value&gt;slave2:50090&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>yarn-env.sh：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/module/jdk1.8</span><br></pre></td></tr></table></figure><ol start="5"><li>yarn-site.xml：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">     &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">     &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">     &lt;value&gt;slave1&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>mapred-env.sh：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/module/jdk1.8</span><br></pre></td></tr></table></figure><ol start="7"><li>mapred-site.xml：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">      &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">       &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><ol start="8"><li>slaves：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">master</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure><p>现在存在两个问题必须要解决</p><ul><li>Docker容器中的IP地址是启动后自动分配的，且不能手动更改。好在每次重启容器后，IP地址基本不发生变化，这个暂时不需要考虑。</li></ul><p>*　hostname、host配置在容器内修改了，只能在本次容器声明周期内有效，如果容器退出了，重新启动，这两个配置会被还原，且这两个配置无法通过commit命令写入镜像。</p><p>　　为了解决第二个问题，我们可以通过下面的脚本，来实现每次进入到容器时先执行这个脚本，添加映射信息到/etc/hosts文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo 172.17.0.2 master &gt;&gt; /etc/hosts</span><br><span class="line">echo 172.17.0.3 slave1 &gt;&gt; /etc/hosts</span><br><span class="line">echo 172.17.0.4 slave2 &gt;&gt; /etc/hosts</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>注意：上面的所有操作都是在容器中完成的，如果容器重启，则配置丢失，为了解决这个问题，可以先进行commit操作。</p><p>在宿主机上执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux5 opt]# docker ps </span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                                                                        NAMES</span><br><span class="line"><span class="meta">#</span><span class="bash"> 就是这ID</span></span><br><span class="line">156973c4491d        228dfd812b66        "/bin/bash"         3 hours ago         Up 3 hours          8088/tcp, 19888/tcp, 50070/tcp                                               slave2</span><br><span class="line">38832bc51040        228dfd812b66        "/bin/bash"         3 hours ago         Up 3 hours          8088/tcp, 19888/tcp, 50070/tcp                                               slave1</span><br><span class="line">9bd4e9511f71        228dfd812b66        "/bin/bash"         3 hours ago         Up 3 hours          0.0.0.0:8088-&gt;8088/tcp, 0.0.0.0:19888-&gt;19888/tcp, 0.0.0.0:50070-&gt;50070/tcp   master</span><br><span class="line">[root@Linux5 opt]# docker commit 156973c4491d centos-hadoop:1.3</span><br></pre></td></tr></table></figure><h3 id="2-2）、启动集群"><a href="#2-2）、启动集群" class="headerlink" title="2.2）、启动集群"></a>2.2）、启动集群</h3><p>在master上启动hdfs</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master hadoop]# sbin/start-dfs.sh</span><br><span class="line">Starting namenodes on [master]</span><br><span class="line">master: starting namenode, logging to /opt/module/hadoop/logs/hadoop-root-namenode-master.out</span><br><span class="line">slave2: starting datanode, logging to /opt/module/hadoop/logs/hadoop-root-datanode-slave2.out</span><br><span class="line">slave1: starting datanode, logging to /opt/module/hadoop/logs/hadoop-root-datanode-slave1.out</span><br><span class="line">master: starting datanode, logging to /opt/module/hadoop/logs/hadoop-root-datanode-master.out</span><br><span class="line">Starting secondary namenodes [slave2]</span><br><span class="line">slave2: starting secondarynamenode, logging to /opt/module/hadoop/logs/hadoop-root-secondarynamenode-slave2.out</span><br></pre></td></tr></table></figure><p>在slave1启动Yarn</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@slave1 hadoop]# sbin/start-yarn.sh</span><br><span class="line">starting yarn daemons</span><br><span class="line">starting resourcemanager, logging to /opt/module/hadoop/logs/yarn-root-resourcemanager-slave1.out</span><br><span class="line">slave2: starting nodemanager, logging to /opt/module/hadoop/logs/yarn-root-nodemanager-slave2.out</span><br><span class="line">master: starting nodemanager, logging to /opt/module/hadoop/logs/yarn-root-nodemanager-master.out</span><br><span class="line">slave1: starting nodemanager, logging to /opt/module/hadoop/logs/yarn-root-nodemanager-slave1.out</span><br></pre></td></tr></table></figure><p>查看master节点的进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master hadoop]# jps</span><br><span class="line">3585 NameNode</span><br><span class="line">3993 NodeManager</span><br><span class="line">3691 DataNode</span><br></pre></td></tr></table></figure><p>查看slave1节点的进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@slave1 hadoop]# jps</span><br><span class="line">1748 DataNode</span><br><span class="line">2004 ResourceManager</span><br><span class="line">2107 NodeManager</span><br></pre></td></tr></table></figure><p>查看slave2节点的进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@slave2 logs]# jps</span><br><span class="line">1555 DataNode</span><br><span class="line">1655 SecondaryNameNode</span><br><span class="line">1790 NodeManager</span><br><span class="line">[root@slave2 logs]#</span><br></pre></td></tr></table></figure><h3 id="2-3）、验证结果"><a href="#2-3）、验证结果" class="headerlink" title="2.3）、验证结果"></a>2.3）、验证结果</h3><p>访问界面：<a href="http://192.168.137.25:50070/explorer.html#/&gt;" target="_blank" rel="noopener">http://192.168.137.25:50070/explorer.html#/&gt;</a></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571388178409.png" alt="1571388178409"></p><p>如果通过上面的方式不能访问，请安按照如下的顺序检查：</p><p>(1)  curl <a href="http://172.17.0.2:50070/" target="_blank" rel="noopener">http://172.17.0.2:50070/</a>    在master节点上访问，查看是否能够打印报文信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@master hadoop]#  curl http://172.17.0.2:50070/  </span><br><span class="line">&lt;!--</span><br><span class="line">   Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="line">   contributor license agreements.  See the NOTICE file distributed with</span><br><span class="line">   this work for additional information regarding copyright ownership.</span><br><span class="line">   The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="line">   (the "License"); you may not use this file except in compliance with</span><br><span class="line">   the License.  You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">       http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"></span><br><span class="line">   Unless required by applicable law or agreed to in writing, software</span><br><span class="line">   distributed under the License is distributed on an "AS IS" BASIS,</span><br><span class="line">   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">   See the License for the specific language governing permissions and</span><br><span class="line">   limitations under the License.</span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"></span></span><br><span class="line">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"</span><br><span class="line">    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</span><br><span class="line">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv="REFRESH" content="0;url=dfshealth.html" /&gt;</span><br><span class="line">&lt;title&gt;Hadoop Administration&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>如果不能访问，检查进程是否正常。</p><p>（2）curl <a href="http://192.168.137.25:50070/" target="_blank" rel="noopener">http://192.168.137.25:50070/</a> 能够打印报文头信息，说明OK</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux5 opt]# curl http://192.168.137.25:50070/</span><br><span class="line"> &lt;!--</span><br><span class="line">    Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="line">    contributor license agreements.  See the NOTICE file distributed with</span><br><span class="line">    this work for additional information regarding copyright ownership.</span><br><span class="line">    The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="line">    (the "License"); you may not use this file except in compliance with</span><br><span class="line">    the License.  You may obtain a copy of the License at</span><br><span class="line"> </span><br><span class="line">        http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"> </span><br><span class="line">    Unless required by applicable law or agreed to in writing, software</span><br><span class="line">    distributed under the License is distributed on an "AS IS" BASIS,</span><br><span class="line">    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">    See the License for the specific language governing permissions and</span><br><span class="line">    limitations under the License.</span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"></span></span><br><span class="line"> &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"</span><br><span class="line">     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</span><br><span class="line"> &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line"> &lt;meta http-equiv="REFRESH" content="0;url=dfshealth.html" /&gt;</span><br><span class="line"> &lt;title&gt;Hadoop Administration&lt;/title&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line"> &lt;/html&gt;</span><br></pre></td></tr></table></figure><p>（3）如果上面两步都正常，在win10上通过浏览器还是不能，可能是由于没有开启IP转发所导致的</p><p>解决方法就是开启IP转发：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux5 opt]# cat /proc/sys/net/ipv4/ip_forward</span><br><span class="line">0</span><br><span class="line">[root@Linux5 opt]# sysctl -w net.ipv4.ip_forward=1</span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure><p>但是这样只是临时生效，如果想要永久生效，则需要这样做：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux5 opt]# vi /etc/sysctl.conf </span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure><blockquote><p>参考链接：<a href="https://blog.csdn.net/wo18237095579/article/details/81509364" target="_blank" rel="noopener">问题 - Linux 下 Docker 端口映射到宿主机后 外部无法访问对应宿主机端口</a></p></blockquote><p>引用连接：</p><blockquote><p>（centos7）搭建基于docker的hadoop集群1：<a href="https://blog.csdn.net/u013140345/article/details/79771208" target="_blank" rel="noopener">https://blog.csdn.net/u013140345/article/details/79771208</a></p></blockquote><blockquote><p>（centos7）搭建基于docker的hadoop集群2：<a href="https://blog.csdn.net/u013140345/article/details/79773212" target="_blank" rel="noopener">https://blog.csdn.net/u013140345/article/details/79773212</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;序：在以往操作中，需要在每台设备上搭建Hadoop、Hive和hbase环境，不仅操作麻烦而且繁琐。而在docker中一台设备上就可以完成，而且操作方便。&lt;/p&gt;
&lt;h1 id=&quot;Dcoker中完全分布式集群的搭建&quot;&gt;&lt;a href=&quot;#Dcoker中完全分布式集群的搭建&quot;
      
    
    </summary>
    
    
    
      <category term="dock" scheme="https://cosmoswong.github.io/tags/dock/"/>
    
      <category term="hadoop" scheme="https://cosmoswong.github.io/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>hadoop学习简记</title>
    <link href="https://cosmoswong.github.io/2019/10/14/hadoop%E5%AD%A6%E4%B9%A0%E7%AE%80%E8%AE%B0/"/>
    <id>https://cosmoswong.github.io/2019/10/14/hadoop学习简记/</id>
    <published>2019-10-13T16:26:19.000Z</published>
    <updated>2019-10-19T10:11:51.833Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hadoop构成"><a href="#hadoop构成" class="headerlink" title="hadoop构成"></a>hadoop构成</h2><p>Haoop是由HDFS，Yarn和MapReduce所构成的。</p><h3 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h3><p>hdfs负责存储。</p><h3 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h3><p>yarn复制资源调度和管理</p><h3 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h3><p>MapReduce负责离线计算。</p><h1 id="1-在centos上搭建Hadoop完全式集群"><a href="#1-在centos上搭建Hadoop完全式集群" class="headerlink" title="1. 在centos上搭建Hadoop完全式集群"></a>1. 在centos上搭建Hadoop完全式集群</h1><h2 id="1-1-克隆虚拟机"><a href="#1-1-克隆虚拟机" class="headerlink" title="1.1 克隆虚拟机"></a>1.1 克隆虚拟机</h2><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571212046129.png" alt="1571212046129"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571212158991.png" alt="1571212158991"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571212167787.png" alt="1571212167787"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571212175974.png" alt="1571212175974"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571212243778.png" alt="1571212243778"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571212257508.png" alt="1571212257508"></p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571212265117.png" alt="1571212265117"></p><h2 id="1-2-修改克隆虚拟机的静态IP"><a href="#1-2-修改克隆虚拟机的静态IP" class="headerlink" title="1.2 修改克隆虚拟机的静态IP"></a>1.2 修改克隆虚拟机的静态IP</h2><p>1）在终端命令窗口中输入</p><p>[root@hadoop101 /]#vim /etc/udev/rules.d/70-persistent-net.rules</p><p>进入如下页面，删除eth0该行；将eth1修改为eth0，同时复制物理ip地址</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571227426755.png" alt="1571227426755"></p><p>2）修改IP地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop101 /]#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure><p>需要修改的内容有5项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">IPADDR=192.168.1.101</span><br><span class="line"></span><br><span class="line">GATEWAY=192.168.1.2</span><br><span class="line"></span><br><span class="line">ONBOOT=yes</span><br><span class="line"></span><br><span class="line">BOOTPROTO=static</span><br><span class="line"></span><br><span class="line">DNS1=192.168.1.2</span><br></pre></td></tr></table></figure><p>3）执行service network restart</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571227409777.png" alt="1571227409777"></p><p>4）如果报错，reboot，重启虚拟机</p><h2 id="1-3-修改主机名和host文件"><a href="#1-3-修改主机名和host文件" class="headerlink" title="1.3 修改主机名和host文件"></a>1.3 修改主机名和host文件</h2><p>1）修改主机名</p><p>（1）进入Linux系统查看本机的主机名。通过hostname命令查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop ~]# hostname</span><br><span class="line">hadoop100</span><br></pre></td></tr></table></figure><p>（2）如果感觉此主机名不合适，我们可以进行修改。通过编辑/etc/sysconfig/network文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network</span><br><span class="line">配置项如下：</span><br><span class="line">NETWORKING=yes</span><br><span class="line"></span><br><span class="line">NETWORKING_IPV6=no</span><br><span class="line"></span><br><span class="line">HOSTNAME= hadoop101</span><br></pre></td></tr></table></figure><p>注意：主机名称不要有“_”下划线</p><p> (3）修改/etc/host文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p>2）修改window7的hosts文件</p><p>​    （1）进入C:\Windows\System32\drivers\etc路径，修改即可</p><h2 id="1-4-关闭防火墙"><a href="#1-4-关闭防火墙" class="headerlink" title="1.4 关闭防火墙"></a>1.4 关闭防火墙</h2><p>1）查看防火墙开机启动状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig iptables --list</span><br></pre></td></tr></table></figure><p>2）关闭防火墙</p><p>chkconfig iptables off</p><p>有些情况下，使用上面的命令可能提示命令不存在，此时还可以使用如下的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><h2 id="1-5-创建bigdata用户"><a href="#1-5-创建bigdata用户" class="headerlink" title="1.5 创建bigdata用户"></a>1.5 创建bigdata用户</h2><p>创建bigdata用户，并设置密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd bigdata</span><br></pre></td></tr></table></figure><p>设置密码可以通过如下两种非交互方式：</p><ul><li>echo “Admin@123” | passwd -stdin bigdata</li><li>echo bigdata:Admin@123 | chpasswd</li></ul><h2 id="1-6-配置bigdata用户具有sudo权限"><a href="#1-6-配置bigdata用户具有sudo权限" class="headerlink" title="1.6  配置bigdata用户具有sudo权限"></a>1.6  配置bigdata用户具有sudo权限</h2><h1 id="2-Hadoop的命令操作"><a href="#2-Hadoop的命令操作" class="headerlink" title="2. Hadoop的命令操作"></a>2. Hadoop的命令操作</h1><h2 id="1-hadoop-fs-、hadoop-dfs-、hdfs-dfs三者的关系？"><a href="#1-hadoop-fs-、hadoop-dfs-、hdfs-dfs三者的关系？" class="headerlink" title="1. hadoop fs 、hadoop dfs 、hdfs dfs三者的关系？"></a>1. hadoop fs 、hadoop dfs 、hdfs dfs三者的关系？</h2><p><img src="/2019/10/14/hadoop学习简记/D:%5CMarkdownNotes%5Cassets%5Cimages%5C1571475835097.png" alt="1571475835097"></p><h2 id="2-常用命令操作"><a href="#2-常用命令操作" class="headerlink" title="2. 常用命令操作"></a>2. 常用命令操作</h2><p>（1）-help：输出这个命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -help rm</span><br></pre></td></tr></table></figure><p>（2）-ls: 显示目录信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -ls /</span><br></pre></td></tr></table></figure><p>（3）-mkdir：在HDFS上创建目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -mkdir -p /sanguo/shuguo</span><br></pre></td></tr></table></figure><p>（4）-moveFromLocal：从本地剪切粘贴到HDFS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ touch kongming.txt</span><br><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs  -moveFromLocal  ./kongming.txt  /sanguo/shuguo</span><br></pre></td></tr></table></figure><p>（5）-appendToFile：追加一个文件到已经存在的文件末尾</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ touch liubei.txt</span><br><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ vi liubei.txt</span><br><span class="line">输入</span><br><span class="line">san gu mao lu</span><br><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -appendToFile liubei.txt /sanguo/shuguo/kongming.txt</span><br></pre></td></tr></table></figure><p>（6）-cat：显示文件内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -cat /sanguo/shuguo/kongming.txt</span><br></pre></td></tr></table></figure><p>（7）-chgrp 、-chmod、-chown：Linux文件系统中的用法一样，修改文件所属权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs  -chmod  666  /sanguo/shuguo/kongming.txt</span><br><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs  -chown  bigdata:bigdata   /sanguo/shuguo/kongming.txt</span><br></pre></td></tr></table></figure><p>（8）-copyFromLocal：从本地文件系统中拷贝文件到HDFS路径去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -copyFromLocal README.txt /</span><br></pre></td></tr></table></figure><p>（9）-copyToLocal：从HDFS拷贝到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -copyToLocal /sanguo/shuguo/kongming.txt ./</span><br></pre></td></tr></table></figure><p>（10）-cp ：从HDFS的一个路径拷贝到HDFS的另一个路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -cp /sanguo/shuguo/kongming.txt /zhuge.txt</span><br></pre></td></tr></table></figure><p>（11）-mv：在HDFS目录中移动文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -mv /zhuge.txt /sanguo/shuguo/</span><br></pre></td></tr></table></figure><p>（12）-get：等同于copyToLocal，就是从HDFS下载文件到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -get /sanguo/shuguo/kongming.txt ./</span><br></pre></td></tr></table></figure><p>（13）-getmerge：合并下载多个文件，比如HDFS的目录 /user/bigdata/test下有多个文件:log.1, log.2,log.3,…</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -getmerge /user/bigdata/test/* ./zaiyiqi.txt</span><br></pre></td></tr></table></figure><p>（14）-put：等同于copyFromLocal</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -put ./zaiyiqi.txt /user/bigdata/test/</span><br></pre></td></tr></table></figure><p>（15）-tail：显示一个文件的末尾</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -tail /sanguo/shuguo/kongming.txt</span><br></pre></td></tr></table></figure><p>（16）-rm：删除文件或文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -rm /user/bigdata/test/jinlian2.txt</span><br></pre></td></tr></table></figure><p>（17）-rmdir：删除空目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -mkdir /test</span><br><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -rmdir /test</span><br></pre></td></tr></table></figure><p>（18）-du统计文件夹的大小信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -du -s -h /user/bigdata/test</span><br><span class="line">2.7 K  /user/bigdata/test</span><br><span class="line"></span><br><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -du  -h /user/bigdata/test</span><br><span class="line">1.3 K  /user/bigdata/test/README.txt</span><br><span class="line">15     /user/bigdata/test/jinlian.txt</span><br><span class="line">1.4 K  /user/bigdata/test/zaiyiqi.txt</span><br></pre></td></tr></table></figure><p>（19）-setrep：设置HDFS中文件的副本数量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[bigdata@hadoop102 hadoop-2.7.2]$ hadoop fs -setrep 10 /sanguo/shuguo/kongming.txt</span><br></pre></td></tr></table></figure><p>​     这里设置的副本数只是记录在NameNode的元数据，实际未必会存在这么多的副本，实际存储的副本数取决于DataNode的数量。如目前只有3台设备，最多也就3个副本，只有当节点数的增加到10台时，副本数才能达到10。</p><h1 id="待归类"><a href="#待归类" class="headerlink" title="待归类"></a>待归类</h1><h2 id="Hadoop-任务提交流程"><a href="#Hadoop-任务提交流程" class="headerlink" title="Hadoop 任务提交流程"></a>Hadoop 任务提交流程</h2><p><img src="/2019/10/14/hadoop学习简记/MyBlogs/FirstBlog/cosmosw/source/_posts/hadoop%E5%AD%A6%E4%B9%A0%E7%AE%80%E8%AE%B0/1570984094833.png" alt="1570984094833"></p><p>客户端提交任务，先将任务提交到AM上，MR AppMster是由AM来进行管理的，当请求交给AM后，它会转到对应的NodeManager上启动MR App Mstr，启动后，回向Resource Scheduler申请资源（Container），申请完成之后，ResouceManager会将申请到的资源反馈给MR App Mstr，然后MR App Mstr会和NodeManager通信，要求它们启动MapTask和ReduceTask。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hadoop构成&quot;&gt;&lt;a href=&quot;#hadoop构成&quot; class=&quot;headerlink&quot; title=&quot;hadoop构成&quot;&gt;&lt;/a&gt;hadoop构成&lt;/h2&gt;&lt;p&gt;Haoop是由HDFS，Yarn和MapReduce所构成的。&lt;/p&gt;
&lt;h3 id=&quot;HD
      
    
    </summary>
    
    
    
      <category term="Hadoop" scheme="https://cosmoswong.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>个人博客的搭建方法</title>
    <link href="https://cosmoswong.github.io/2019/10/13/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/"/>
    <id>https://cosmoswong.github.io/2019/10/13/个人博客的搭建方法/</id>
    <published>2019-10-13T04:34:31.000Z</published>
    <updated>2019-10-16T07:34:58.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Github-Typroa-个人博客的搭建"><a href="#Hexo-Github-Typroa-个人博客的搭建" class="headerlink" title="Hexo+Github+Typroa 个人博客的搭建"></a>Hexo+Github+Typroa 个人博客的搭建</h1><h2 id="搭建方法"><a href="#搭建方法" class="headerlink" title="搭建方法"></a>搭建方法</h2><p>​      最近看了很多个人博客，感觉写的很好，临渊羡鱼不如退而结网，就自己整一个呗，说干就干。</p><p>经过了一天的折腾，总算搭建好了，也没想想的那么复杂。总结一下就是使用hexo+github就行了。</p><p>搭建过程参考了这位网友的：<a href="https://www.cnblogs.com/trista222/p/8017300.html" target="_blank" rel="noopener">https://www.cnblogs.com/trista222/p/8017300.html</a></p><h2 id="选择图床"><a href="#选择图床" class="headerlink" title="选择图床"></a>选择图床</h2><p>​       在图床选型上使用腾讯云或本地图片的方式。比较大图片上传到腾讯云上，然后在博客上引用。小图片直接附带博客一并存放到GitHub上。</p><p>​       使用腾讯云作为图床的配置方法：<a href="https://blog.csdn.net/a201577f0546/article/details/80146350" target="_blank" rel="noopener">https://blog.csdn.net/a201577f0546/article/details/80146350</a>，个人尝试了下，感觉还不错挺快的。只是收费，不过费用不高。目前活动期间，博主目前领到了一元6个月的存储空间，非常实惠。</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571207923637.png" alt="1571207923637"></p><p>​       下面着重介绍的是使用本地图片的方式，这种方式适用于图片比较小的情形，如果图片比较大，还是使用图床吧！否则加载起来巨慢。这种方式实际上就是将保存到GitHub上。具体的操作方法，使用hexo-asset-image，关于它的安装和配置方法，见博客：<a href="https://www.jianshu.com/p/950f8f13a36c" target="_blank" rel="noopener">https://www.jianshu.com/p/950f8f13a36c</a></p><p>​        安装了hexo-asset-image，在创建blog的时候，会同步创建一个文件夹</p><p>如下：</p><p><img src="/2019/10/13/个人博客的搭建方法/1570941808160.png" alt="1570941808160"></p><p>可以看到在source目录下自动创建了一个同名的文件夹，这个文件夹就是将要存放博客图片的地方</p><p><img src="/2019/10/13/个人博客的搭建方法/1570941935114.png" alt="1570941935114"></p><p>​      接下来，需要做一些小的设置，博主使用是typroa作为博客的编辑器，感觉这个编辑器还是挺好用的，非常适合markdown编辑操作。设置一下typroa，使得每次插入的图片都会放到所编辑文件，同名的文件夹下：</p><p><img src="/2019/10/13/个人博客的搭建方法/1570942178089.png" alt="1570942178089"></p><p>​      键入“./${filename}”表示将图片存放到，和所编辑文件同名的目录中。也就是实例中的“个人博客搭建方法”中，现在我们打开这个目录，可以看到我在typroa中所引用的图片存放到了这个地方了</p><p><img src="/2019/10/13/个人博客的搭建方法/1570942342127.png" alt="1570942342127"></p><p>​       如果存在什么问题，请参考这个博客：<a href="https://blog.51cto.com/nxlhero/2441582?source=dra" target="_blank" rel="noopener">https://blog.51cto.com/nxlhero/2441582?source=dra</a></p><p>好了，这就OK。</p><p>可以放心的编写博客了，编写完毕后，</p><p>在hexo中生成静态页面：hexo g</p><p>然后查看一下效果：hexo s</p><p>最后发布到Github上：hexo d</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>在hexo所生成的这些markdown中，key和value之间，一定要有空格，否则生成静态页面期间，会出现各种意想不到的问题。</p><p><img src="/2019/10/13/个人博客的搭建方法/1570942629142.png" alt="1570942629142"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-Github-Typroa-个人博客的搭建&quot;&gt;&lt;a href=&quot;#Hexo-Github-Typroa-个人博客的搭建&quot; class=&quot;headerlink&quot; title=&quot;Hexo+Github+Typroa 个人博客的搭建&quot;&gt;&lt;/a&gt;Hexo+Git
      
    
    </summary>
    
    
    
      <category term="blog管理" scheme="https://cosmoswong.github.io/tags/blog%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>GitHub命令操作</title>
    <link href="https://cosmoswong.github.io/2019/10/12/GitHub%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/"/>
    <id>https://cosmoswong.github.io/2019/10/12/GitHub命令操作/</id>
    <published>2019-10-12T14:06:52.000Z</published>
    <updated>2019-10-18T11:41:54.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitHub命令操作"><a href="#GitHub命令操作" class="headerlink" title="GitHub命令操作"></a>GitHub命令操作</h1><h2 id="1-Git-常用词含义"><a href="#1-Git-常用词含义" class="headerlink" title="1. Git 常用词含义"></a>1. Git 常用词含义</h2><p><img src="/2019/10/12/GitHub命令操作/1570890261588.png" alt="1570890261588"></p><h2 id="2-in-关键词限制搜索范围"><a href="#2-in-关键词限制搜索范围" class="headerlink" title="2. in 关键词限制搜索范围"></a>2. in 关键词限制搜索范围</h2><pre><code>公式   xx 关键词   in:name 或description或readme   xx in:name  项目名称包含XX的   xx in:description  项目描述中包含xx的   xx  in:readme  项目readme文件中包含xx的   组合使用    项目名称或者description中包含name或readme,以“,”作为分割。</code></pre><p> 如：hadoop in:name,discription,readme</p><p><img src="/2019/10/12/GitHub命令操作/1570891064698.png" alt="1570891064698"></p><h2 id="3-stars-或fork-数量关键词去查找"><a href="#3-stars-或fork-数量关键词去查找" class="headerlink" title="3. stars 或fork 数量关键词去查找"></a>3. stars 或fork 数量关键词去查找</h2><p>公式   xx 关键词 stars 通配符   :&gt; 或者 :&lt;= </p><pre><code>区间范围数字  数字1..数字2</code></pre><p>(1) 查找stars数大于等于5000的springcloud</p><p> springcloud stars:&gt;=5000<br><img src="/2019/10/12/GitHub命令操作/1570891275376.png" alt="1570891275376"></p><p>(2) 查找fork数大于5000的springboot 项目</p><p>springboot fork:&gt;=5000</p><p><img src="/2019/10/12/GitHub命令操作/1570891420336.png" alt="1570891420336"></p><p>(3) 组合使用    查找fork在100到200并且stars 数在 80 到100 之间的springcloud项目</p><p>springcloud fork:100..200 stars:80..100</p><p><img src="/2019/10/12/GitHub命令操作/1570891595164.png" alt="1570891595164"></p><h2 id="4-awesome加强搜索"><a href="#4-awesome加强搜索" class="headerlink" title="4. awesome加强搜索"></a>4. awesome加强搜索</h2><p>​        awesome  释义为极好的，了不起的    此关键字一般用来搜索优秀的框架</p><p>   例如：搜索 kafka相关的优秀项目</p><p><img src="/2019/10/12/GitHub命令操作/1570891692427.png" alt="1570891692427"></p><h2 id="5-高亮显示某一行代码"><a href="#5-高亮显示某一行代码" class="headerlink" title="5. 高亮显示某一行代码"></a>5. 高亮显示某一行代码</h2><p>高亮显示某一行代码，地址后面加上“#LLineNumber ” </p><p>如：高亮显示第20行</p><p><a href="https://github.com/apache/hadoop/blob/trunk/hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/ClientCredentialInterceptor.java#L35" target="_blank" rel="noopener">https://github.com/apache/hadoop/blob/trunk/hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/ClientCredentialInterceptor.java#L35</a></p><p><img src="/2019/10/12/GitHub命令操作/1570892174041.png" alt="1570892174041"></p><p>如果想要高亮显示某个区域内的代码，可以通过“#L数字1-L数字2”的方式，</p><p>如：想要高亮显示35行到40行内的代码</p><p><a href="https://github.com/apache/hadoop/blob/trunk/hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/ClientCredentialInterceptor.java#L35-L43" target="_blank" rel="noopener">https://github.com/apache/hadoop/blob/trunk/hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/ClientCredentialInterceptor.java#L35-L43</a></p><p><img src="/2019/10/12/GitHub命令操作/1570892278839.png" alt="1570892278839"></p><h2 id="6-项目内搜索"><a href="#6-项目内搜索" class="headerlink" title="6. 项目内搜索"></a>6. 项目内搜索</h2><p>使用快捷键t ，可以以列表的形式显示项目内的所有文件，方便检索，并且还贴心的给出了小提示信息</p><p><img src="/2019/10/12/GitHub命令操作/1570892530705.png" alt="1570892530705"></p><p>更多操作，可以在：<a href="https://help.github.com/en/articles/keyboard-shortcuts" target="_blank" rel="noopener">https://help.github.com/en/articles/keyboard-shortcuts</a>中查看</p><p><img src="/2019/10/12/GitHub命令操作/1570892961400.png" alt="1570892961400"></p><h2 id="7-搜索某个区域内的大牛"><a href="#7-搜索某个区域内的大牛" class="headerlink" title="7. 搜索某个区域内的大牛"></a>7. 搜索某个区域内的大牛</h2><p>如查找在上海活跃度比较高的大牛</p><p>location:shanghai language:flume</p><p><img src="/2019/10/12/GitHub命令操作/1570892728050.png" alt="1570892728050"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;GitHub命令操作&quot;&gt;&lt;a href=&quot;#GitHub命令操作&quot; class=&quot;headerlink&quot; title=&quot;GitHub命令操作&quot;&gt;&lt;/a&gt;GitHub命令操作&lt;/h1&gt;&lt;h2 id=&quot;1-Git-常用词含义&quot;&gt;&lt;a href=&quot;#1-Git-常用词含
      
    
    </summary>
    
    
    
      <category term="GitHub" scheme="https://cosmoswong.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>深入理解JVM读书笔记</title>
    <link href="https://cosmoswong.github.io/2019/10/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM/"/>
    <id>https://cosmoswong.github.io/2019/10/12/深入理解JVM/</id>
    <published>2019-10-12T14:06:52.000Z</published>
    <updated>2019-10-13T08:47:46.241Z</updated>
    
    <content type="html"><![CDATA[<p>   最近系统性的学习了一下JVM相关知识，包括JVM内存模型/JVM调优/生产实战相关，只为了能够更好的巩固和备忘。</p><h2 id="JVM内存模型"><a href="#JVM内存模型" class="headerlink" title="JVM内存模型"></a>JVM内存模型</h2><h2 id="JVM-调优参数"><a href="#JVM-调优参数" class="headerlink" title="JVM 调优参数"></a>JVM 调优参数</h2><p>测试性的代码：</p><p> 最近系统性的学习了一下JVM相关知识，包括JVM内存模型/JVM调优/生产实战相关，只为了能够更好的巩固和备忘。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlowBean</span> <span class="keyword">implements</span> <span class="title">WritableComparable</span>&lt;<span class="title">FlowBean</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long phoneNum;</span><br><span class="line">    <span class="keyword">private</span> Long upFlow;</span><br><span class="line">    <span class="keyword">private</span> Long downFlow;</span><br><span class="line">    <span class="keyword">private</span> Long totoalFlow;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FlowBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FlowBean</span><span class="params">(Long upFlow, Long downFlow)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.upFlow = upFlow;</span><br><span class="line">        <span class="keyword">this</span>.downFlow = downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FlowBean</span><span class="params">(Long phoneNum, Long upFlow, Long downFlow)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phoneNum = phoneNum;</span><br><span class="line">        <span class="keyword">this</span>.upFlow = upFlow;</span><br><span class="line">        <span class="keyword">this</span>.downFlow = downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getPhoneNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> phoneNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPhoneNum</span><span class="params">(Long phoneNum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phoneNum = phoneNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getUpFlow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> upFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpFlow</span><span class="params">(Long upFlow)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.upFlow = upFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getDownFlow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDownFlow</span><span class="params">(Long downFlow)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.downFlow = downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getTotoalFlow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> totoalFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotoalFlow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.totoalFlow = <span class="keyword">this</span>.upFlow+<span class="keyword">this</span>.downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(DataOutput out)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      out.writeLong(<span class="keyword">this</span>.phoneNum);</span><br><span class="line">      out.writeLong(<span class="keyword">this</span>.upFlow);</span><br><span class="line">      out.writeLong(<span class="keyword">this</span>.downFlow);</span><br><span class="line">      out.writeLong(<span class="keyword">this</span>.totoalFlow);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readFields</span><span class="params">(DataInput in)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phoneNum=in.readLong();</span><br><span class="line">        <span class="keyword">this</span>.upFlow= in.readLong();</span><br><span class="line">        <span class="keyword">this</span>.downFlow=in.readLong();</span><br><span class="line">        <span class="keyword">this</span>.totoalFlow=in.readLong();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">                <span class="string">"upFlow="</span> + upFlow +</span><br><span class="line">                <span class="string">", downFlow="</span> + downFlow +</span><br><span class="line">                <span class="string">", totoalFlow="</span> + totoalFlow;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//实现对于输出结果，按照totoalFlow逆序</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(FlowBean o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Long.compare(o.totoalFlow,<span class="keyword">this</span>.totoalFlow);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;   最近系统性的学习了一下JVM相关知识，包括JVM内存模型/JVM调优/生产实战相关，只为了能够更好的巩固和备忘。&lt;/p&gt;
&lt;h2 id=&quot;JVM内存模型&quot;&gt;&lt;a href=&quot;#JVM内存模型&quot; class=&quot;headerlink&quot; title=&quot;JVM内存模型&quot;&gt;&lt;/
      
    
    </summary>
    
    
    
      <category term="Java" scheme="https://cosmoswong.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>简要信息</title>
    <link href="https://cosmoswong.github.io/2019/10/12/%E7%AE%80%E8%A6%81%E4%BF%A1%E6%81%AF/"/>
    <id>https://cosmoswong.github.io/2019/10/12/简要信息/</id>
    <published>2019-10-12T14:06:52.000Z</published>
    <updated>2019-10-13T04:30:30.640Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存放一些测试性数据"><a href="#存放一些测试性数据" class="headerlink" title="存放一些测试性数据"></a>存放一些测试性数据</h1><p>   使用腾讯云做为图床：<a href="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1570812319510.png" target="_blank" rel="noopener">https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1570812319510.png</a></p><p>   本地编写的时候，直接使用D:\MarkdownNotes\assets\images作为图片的保存路径，上传到GitHub上时，替换路路径为：<a href="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/" target="_blank" rel="noopener">https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/</a></p><p><a href="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1570812319510.png" target="_blank" rel="noopener">https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1570812319510.png</a></p><p>   技巧：替换方法，“ctrl+/”，进入到源码模式，然后全局替换即可。</p><p>title: mydemo<br>date: 2019-10-12 19:23:31<br>tags:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;存放一些测试性数据&quot;&gt;&lt;a href=&quot;#存放一些测试性数据&quot; class=&quot;headerlink&quot; title=&quot;存放一些测试性数据&quot;&gt;&lt;/a&gt;存放一些测试性数据&lt;/h1&gt;&lt;p&gt;   使用腾讯云做为图床：&lt;a href=&quot;https://cosmoswong-i
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://cosmoswong.github.io/2019/10/11/hello-world/"/>
    <id>https://cosmoswong.github.io/2019/10/11/hello-world/</id>
    <published>2019-10-10T23:09:01.142Z</published>
    <updated>2019-10-10T23:09:01.142Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
