<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cosmoswong</title>
  
  <subtitle>A journey of a thousand miles begins with a single step.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cosmoswong.github.io/"/>
  <updated>2019-10-16T06:50:18.668Z</updated>
  <id>https://cosmoswong.github.io/</id>
  
  <author>
    <name>cosmoswong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>提高工作效率的桌面工具推荐</title>
    <link href="https://cosmoswong.github.io/2019/10/16/%E6%8F%90%E9%AB%98%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E7%9A%84%E6%A1%8C%E9%9D%A2%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    <id>https://cosmoswong.github.io/2019/10/16/提高工作效率的桌面工具推荐/</id>
    <published>2019-10-16T06:20:57.000Z</published>
    <updated>2019-10-16T06:50:18.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中"><a href="#1-clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中" class="headerlink" title="1.clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中"></a>1.clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中</h1><p>   不过美中不足的是clover的广告实在是太多了，忍受不了的话，可以使用Q-Dir来替代。</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571207314818.png" alt="1571207314818"></p><h1 id="2-Everything-搜索利器"><a href="#2-Everything-搜索利器" class="headerlink" title="2. Everything-搜索利器"></a>2. Everything-搜索利器</h1><p>通过这款工具，妈妈再也不用担心我找不到自己的文件了。</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571207403705.png" alt="1571207403705"></p><p>支持多种搜索方式，后缀名、前缀名、图片、视频等。</p><p>未完待续……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中&quot;&gt;&lt;a href=&quot;#1-clover工具，能够管理多个窗口，使得它们都显示在同一个窗口中&quot; class=&quot;headerlink&quot; title=&quot;1.clover工具，能够管理多个窗口，使得它们
      
    
    </summary>
    
    
    
      <category term="桌面管理" scheme="https://cosmoswong.github.io/tags/%E6%A1%8C%E9%9D%A2%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>基于docker的hadoop集群搭建</title>
    <link href="https://cosmoswong.github.io/2019/10/16/%E5%9F%BA%E4%BA%8Edocker%E7%9A%84hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>https://cosmoswong.github.io/2019/10/16/基于docker的hadoop集群搭建/</id>
    <published>2019-10-16T06:20:10.000Z</published>
    <updated>2019-10-16T06:20:10.435Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>hadoop学习简记</title>
    <link href="https://cosmoswong.github.io/2019/10/14/hadoop%E5%AD%A6%E4%B9%A0%E7%AE%80%E8%AE%B0/"/>
    <id>https://cosmoswong.github.io/2019/10/14/hadoop学习简记/</id>
    <published>2019-10-13T16:26:19.000Z</published>
    <updated>2019-10-13T16:41:12.339Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hadoop构成"><a href="#hadoop构成" class="headerlink" title="hadoop构成"></a>hadoop构成</h2><p>Haoop是由HDFS，Yarn和MapReduce所构成的。</p><h3 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h3><p>hdfs负责存储。</p><h3 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h3><p>yarn复制资源调度和管理</p><h3 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h3><p>MapReduce负责离线计算。</p><h1 id="1-Hadoop-任务提交流程"><a href="#1-Hadoop-任务提交流程" class="headerlink" title="1. Hadoop 任务提交流程"></a>1. Hadoop 任务提交流程</h1><p><img src="/2019/10/14/hadoop学习简记/1570984094833.png" alt="1570984094833"></p><p>客户端提交任务，先将任务提交到AM上，MR AppMster是由AM来进行管理的，当请求交给AM后，它会转到对应的NodeManager上启动MR App Mstr，启动后，回向Resource Scheduler申请资源（Container），申请完成之后，ResouceManager会将申请到的资源反馈给MR App Mstr，然后MR App Mstr会和NodeManager通信，要求它们启动MapTask和ReduceTask。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hadoop构成&quot;&gt;&lt;a href=&quot;#hadoop构成&quot; class=&quot;headerlink&quot; title=&quot;hadoop构成&quot;&gt;&lt;/a&gt;hadoop构成&lt;/h2&gt;&lt;p&gt;Haoop是由HDFS，Yarn和MapReduce所构成的。&lt;/p&gt;
&lt;h3 id=&quot;HD
      
    
    </summary>
    
    
    
      <category term="Hadoop" scheme="https://cosmoswong.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>个人博客的搭建方法</title>
    <link href="https://cosmoswong.github.io/2019/10/13/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/"/>
    <id>https://cosmoswong.github.io/2019/10/13/个人博客的搭建方法/</id>
    <published>2019-10-13T04:34:31.000Z</published>
    <updated>2019-10-16T06:47:16.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Github-Typroa-个人博客的搭建"><a href="#Hexo-Github-Typroa-个人博客的搭建" class="headerlink" title="Hexo+Github+Typroa 个人博客的搭建"></a>Hexo+Github+Typroa 个人博客的搭建</h1><h2 id="搭建方法"><a href="#搭建方法" class="headerlink" title="搭建方法"></a>搭建方法</h2><p>​      最近看了很多个人博客，感觉写的很好，临渊羡鱼不如退而结网，就自己整一个呗，说干就干。</p><p>经过了一天的折腾，总算搭建好了，也没想想的那么复杂。总结一下就是使用hexo+github就行了。</p><p>搭建过程参考了这位网友的：<a href="https://www.cnblogs.com/trista222/p/8017300.html" target="_blank" rel="noopener">https://www.cnblogs.com/trista222/p/8017300.html</a></p><h2 id="选择图床"><a href="#选择图床" class="headerlink" title="选择图床"></a>选择图床</h2><p>​       在图床选型上使用腾讯云或本地图片的方式。比较大图片上传到腾讯云上，然后在博客上引用。小图片直接附带博客一并存放到GitHub上。</p><p>​       使用腾讯云作为图床的配置方法：<a href="https://blog.csdn.net/a201577f0546/article/details/80146350" target="_blank" rel="noopener">https://blog.csdn.net/a201577f0546/article/details/80146350</a>，个人尝试了下，感觉还不错挺快的。只是收费，不过费用不高。目前活动期间，博主目前领到了一元6个月的存储空间，非常实惠。</p><p><img src="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1571207923637.png" alt="1571207923637"></p><p>​       下面着重介绍的是使用本地图片的方式，这种方式适用于图片比较小的情形，如果图片比较大，还是使用图床吧！否则加载起来巨慢。这种方式实际上就是将保存到GitHub上。具体的操作方法，使用hexo-asset-image，关于它的安装和配置方法，见博客：<a href="https://www.jianshu.com/p/950f8f13a36c" target="_blank" rel="noopener">https://www.jianshu.com/p/950f8f13a36c</a></p><p>​        安装了hexo-asset-image，在创建blog的时候，会同步创建一个文件夹</p><p>如下：</p><p><img src="/2019/10/13/个人博客的搭建方法/1570941808160.png" alt="1570941808160"></p><p>可以看到在source目录下自动创建了一个同名的文件夹，这个文件夹就是将要存放博客图片的地方</p><p><img src="/2019/10/13/个人博客的搭建方法/1570941935114.png" alt="1570941935114"></p><p>​      接下来，需要做一些小的设置，博主使用是typroa作为博客的编辑器，感觉这个编辑器还是挺好用的，非常适合markdown编辑操作。设置一下typroa，使得每次插入的图片都会放到所编辑文件，同名的文件夹下：</p><p><img src="/2019/10/13/个人博客的搭建方法/1570942178089.png" alt="1570942178089"></p><p>​      键入“./${filename}”表示将图片存放到，和所编辑文件同名的目录中。也就是实例中的“个人博客搭建方法”中，现在我们打开这个目录，可以看到我在typroa中所引用的图片存放到了这个地方了</p><p><img src="/2019/10/13/个人博客的搭建方法/1570942342127.png" alt="1570942342127"></p><p>​       如果存在什么问题，请参考这个博客：<a href="https://blog.51cto.com/nxlhero/2441582?source=dra" target="_blank" rel="noopener">https://blog.51cto.com/nxlhero/2441582?source=dra</a></p><p>好了，这就OK。</p><p>可以放心的编写博客了，编写完毕后，</p><p>在hexo中生成静态页面：hexo g</p><p>然后查看一下效果：hexo s</p><p>最后发布到Github上：hexo d</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>在hexo所生成的这些markdown中，key和value之间，一定要有空格，否则生成静态页面期间，会出现各种意想不到的问题。</p><p><img src="/2019/10/13/个人博客的搭建方法/1570942629142.png" alt="1570942629142"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-Github-Typroa-个人博客的搭建&quot;&gt;&lt;a href=&quot;#Hexo-Github-Typroa-个人博客的搭建&quot; class=&quot;headerlink&quot; title=&quot;Hexo+Github+Typroa 个人博客的搭建&quot;&gt;&lt;/a&gt;Hexo+Git
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>GitHub命令操作</title>
    <link href="https://cosmoswong.github.io/2019/10/12/GitHub%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/"/>
    <id>https://cosmoswong.github.io/2019/10/12/GitHub命令操作/</id>
    <published>2019-10-12T14:06:52.000Z</published>
    <updated>2019-10-13T04:24:29.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitHub命令操作"><a href="#GitHub命令操作" class="headerlink" title="GitHub命令操作"></a>GitHub命令操作</h1><h2 id="1-Git-常用词含义"><a href="#1-Git-常用词含义" class="headerlink" title="1. Git 常用词含义"></a>1. Git 常用词含义</h2><p><img src="/2019/10/12/GitHub命令操作/1570890261588.png" alt="1570890261588"></p><h2 id="2-in-关键词限制搜索范围"><a href="#2-in-关键词限制搜索范围" class="headerlink" title="2. in 关键词限制搜索范围"></a>2. in 关键词限制搜索范围</h2><pre><code>公式   xx 关键词   in:name 或description或readme   xx in:name  项目名称包含XX的   xx in:description  项目描述中包含xx的   xx  in:readme  项目readme文件中包含xx的   组合使用    项目名称或者description中包含name或readme,以“,”作为分割。</code></pre><p> 如：hadoop in:name,discription,readme</p><p><img src="/2019/10/12/GitHub命令操作/1570891064698.png" alt="1570891064698"></p><h2 id="3-stars-或fork-数量关键词去查找"><a href="#3-stars-或fork-数量关键词去查找" class="headerlink" title="3. stars 或fork 数量关键词去查找"></a>3. stars 或fork 数量关键词去查找</h2><p>公式   xx 关键词 stars 通配符   :&gt; 或者 :&lt;= </p><pre><code>区间范围数字  数字1..数字2</code></pre><p>(1) 查找stars数大于等于5000的springcloud</p><p> springcloud stars:&gt;=5000<br><img src="/2019/10/12/GitHub命令操作/1570891275376.png" alt="1570891275376"></p><p>(2) 查找fork数大于5000的springboot 项目</p><p>springboot fork:&gt;=5000</p><p><img src="/2019/10/12/GitHub命令操作/1570891420336.png" alt="1570891420336"></p><p>(3) 组合使用    查找fork在100到200并且stars 数在 80 到100 之间的springcloud项目</p><p>springcloud fork:100..200 stars:80..100</p><p><img src="/2019/10/12/GitHub命令操作/1570891595164.png" alt="1570891595164"></p><h2 id="4-awesome加强搜索"><a href="#4-awesome加强搜索" class="headerlink" title="4. awesome加强搜索"></a>4. awesome加强搜索</h2><p>​        awesome  释义为极好的，了不起的    此关键字一般用来搜索优秀的框架</p><p>   例如：搜索 kafka相关的优秀项目</p><p><img src="/2019/10/12/GitHub命令操作/1570891692427.png" alt="1570891692427"></p><h2 id="5-高亮显示某一行代码"><a href="#5-高亮显示某一行代码" class="headerlink" title="5. 高亮显示某一行代码"></a>5. 高亮显示某一行代码</h2><p>高亮显示某一行代码，地址后面加上“#LLineNumber ” </p><p>如：高亮显示第20行</p><p><a href="https://github.com/apache/hadoop/blob/trunk/hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/ClientCredentialInterceptor.java#L35" target="_blank" rel="noopener">https://github.com/apache/hadoop/blob/trunk/hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/ClientCredentialInterceptor.java#L35</a></p><p><img src="/2019/10/12/GitHub命令操作/1570892174041.png" alt="1570892174041"></p><p>如果想要高亮显示某个区域内的代码，可以通过“#L数字1-L数字2”的方式，</p><p>如：想要高亮显示35行到40行内的代码</p><p><a href="https://github.com/apache/hadoop/blob/trunk/hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/ClientCredentialInterceptor.java#L35-L43" target="_blank" rel="noopener">https://github.com/apache/hadoop/blob/trunk/hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/ClientCredentialInterceptor.java#L35-L43</a></p><p><img src="/2019/10/12/GitHub命令操作/1570892278839.png" alt="1570892278839"></p><h2 id="6-项目内搜索"><a href="#6-项目内搜索" class="headerlink" title="6. 项目内搜索"></a>6. 项目内搜索</h2><p>使用快捷键t ，可以以列表的形式显示项目内的所有文件，方便检索，并且还贴心的给出了小提示信息</p><p><img src="/2019/10/12/GitHub命令操作/1570892530705.png" alt="1570892530705"></p><p>更多操作，可以在：<a href="https://help.github.com/en/articles/keyboard-shortcuts" target="_blank" rel="noopener">https://help.github.com/en/articles/keyboard-shortcuts</a>中查看</p><p><img src="/2019/10/12/GitHub命令操作/1570892961400.png" alt="1570892961400"></p><h2 id="7-搜索某个区域内的大牛"><a href="#7-搜索某个区域内的大牛" class="headerlink" title="7. 搜索某个区域内的大牛"></a>7. 搜索某个区域内的大牛</h2><p>如查找在上海活跃度比较高的大牛</p><p>location:shanghai language:flume</p><p><img src="/2019/10/12/GitHub命令操作/1570892728050.png" alt="1570892728050"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;GitHub命令操作&quot;&gt;&lt;a href=&quot;#GitHub命令操作&quot; class=&quot;headerlink&quot; title=&quot;GitHub命令操作&quot;&gt;&lt;/a&gt;GitHub命令操作&lt;/h1&gt;&lt;h2 id=&quot;1-Git-常用词含义&quot;&gt;&lt;a href=&quot;#1-Git-常用词含
      
    
    </summary>
    
    
    
      <category term="GitHub" scheme="https://cosmoswong.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>深入理解JVM读书笔记</title>
    <link href="https://cosmoswong.github.io/2019/10/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM/"/>
    <id>https://cosmoswong.github.io/2019/10/12/深入理解JVM/</id>
    <published>2019-10-12T14:06:52.000Z</published>
    <updated>2019-10-13T08:47:46.241Z</updated>
    
    <content type="html"><![CDATA[<p>   最近系统性的学习了一下JVM相关知识，包括JVM内存模型/JVM调优/生产实战相关，只为了能够更好的巩固和备忘。</p><h2 id="JVM内存模型"><a href="#JVM内存模型" class="headerlink" title="JVM内存模型"></a>JVM内存模型</h2><h2 id="JVM-调优参数"><a href="#JVM-调优参数" class="headerlink" title="JVM 调优参数"></a>JVM 调优参数</h2><p>测试性的代码：</p><p> 最近系统性的学习了一下JVM相关知识，包括JVM内存模型/JVM调优/生产实战相关，只为了能够更好的巩固和备忘。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlowBean</span> <span class="keyword">implements</span> <span class="title">WritableComparable</span>&lt;<span class="title">FlowBean</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long phoneNum;</span><br><span class="line">    <span class="keyword">private</span> Long upFlow;</span><br><span class="line">    <span class="keyword">private</span> Long downFlow;</span><br><span class="line">    <span class="keyword">private</span> Long totoalFlow;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FlowBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FlowBean</span><span class="params">(Long upFlow, Long downFlow)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.upFlow = upFlow;</span><br><span class="line">        <span class="keyword">this</span>.downFlow = downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FlowBean</span><span class="params">(Long phoneNum, Long upFlow, Long downFlow)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phoneNum = phoneNum;</span><br><span class="line">        <span class="keyword">this</span>.upFlow = upFlow;</span><br><span class="line">        <span class="keyword">this</span>.downFlow = downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getPhoneNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> phoneNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPhoneNum</span><span class="params">(Long phoneNum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phoneNum = phoneNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getUpFlow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> upFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpFlow</span><span class="params">(Long upFlow)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.upFlow = upFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getDownFlow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDownFlow</span><span class="params">(Long downFlow)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.downFlow = downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getTotoalFlow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> totoalFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotoalFlow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.totoalFlow = <span class="keyword">this</span>.upFlow+<span class="keyword">this</span>.downFlow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(DataOutput out)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      out.writeLong(<span class="keyword">this</span>.phoneNum);</span><br><span class="line">      out.writeLong(<span class="keyword">this</span>.upFlow);</span><br><span class="line">      out.writeLong(<span class="keyword">this</span>.downFlow);</span><br><span class="line">      out.writeLong(<span class="keyword">this</span>.totoalFlow);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readFields</span><span class="params">(DataInput in)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phoneNum=in.readLong();</span><br><span class="line">        <span class="keyword">this</span>.upFlow= in.readLong();</span><br><span class="line">        <span class="keyword">this</span>.downFlow=in.readLong();</span><br><span class="line">        <span class="keyword">this</span>.totoalFlow=in.readLong();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">                <span class="string">"upFlow="</span> + upFlow +</span><br><span class="line">                <span class="string">", downFlow="</span> + downFlow +</span><br><span class="line">                <span class="string">", totoalFlow="</span> + totoalFlow;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//实现对于输出结果，按照totoalFlow逆序</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(FlowBean o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Long.compare(o.totoalFlow,<span class="keyword">this</span>.totoalFlow);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;   最近系统性的学习了一下JVM相关知识，包括JVM内存模型/JVM调优/生产实战相关，只为了能够更好的巩固和备忘。&lt;/p&gt;
&lt;h2 id=&quot;JVM内存模型&quot;&gt;&lt;a href=&quot;#JVM内存模型&quot; class=&quot;headerlink&quot; title=&quot;JVM内存模型&quot;&gt;&lt;/
      
    
    </summary>
    
    
    
      <category term="Java" scheme="https://cosmoswong.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>简要信息</title>
    <link href="https://cosmoswong.github.io/2019/10/12/%E7%AE%80%E8%A6%81%E4%BF%A1%E6%81%AF/"/>
    <id>https://cosmoswong.github.io/2019/10/12/简要信息/</id>
    <published>2019-10-12T14:06:52.000Z</published>
    <updated>2019-10-13T04:30:30.640Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存放一些测试性数据"><a href="#存放一些测试性数据" class="headerlink" title="存放一些测试性数据"></a>存放一些测试性数据</h1><p>   使用腾讯云做为图床：<a href="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1570812319510.png" target="_blank" rel="noopener">https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1570812319510.png</a></p><p>   本地编写的时候，直接使用D:\MarkdownNotes\assets\images作为图片的保存路径，上传到GitHub上时，替换路路径为：<a href="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/" target="_blank" rel="noopener">https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/</a></p><p><a href="https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1570812319510.png" target="_blank" rel="noopener">https://cosmoswong-img-1258890093.cos.ap-shanghai.myqcloud.com/images/1570812319510.png</a></p><p>   技巧：替换方法，“ctrl+/”，进入到源码模式，然后全局替换即可。</p><p>title: mydemo<br>date: 2019-10-12 19:23:31<br>tags:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;存放一些测试性数据&quot;&gt;&lt;a href=&quot;#存放一些测试性数据&quot; class=&quot;headerlink&quot; title=&quot;存放一些测试性数据&quot;&gt;&lt;/a&gt;存放一些测试性数据&lt;/h1&gt;&lt;p&gt;   使用腾讯云做为图床：&lt;a href=&quot;https://cosmoswong-i
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://cosmoswong.github.io/2019/10/12/git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <id>https://cosmoswong.github.io/2019/10/12/git常用操作/</id>
    <published>2019-10-12T10:01:41.000Z</published>
    <updated>2019-10-13T04:28:17.879Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://cosmoswong.github.io/2019/10/11/hello-world/"/>
    <id>https://cosmoswong.github.io/2019/10/11/hello-world/</id>
    <published>2019-10-10T23:09:01.142Z</published>
    <updated>2019-10-10T23:09:01.142Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
